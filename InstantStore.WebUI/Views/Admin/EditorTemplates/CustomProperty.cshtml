 @using InstantStore.WebUI.Models;
@using InstantStore.WebUI.Resources;

@model InstantStore.Domain.Concrete.CustomProperty
@{
    int propertyIndex = (int)this.ViewData["PropertyIndex"];
}

<div class="form-group">
    @if (propertyIndex != null && propertyIndex == 0)
    {
        <label class="col-sm-2 control-label">@StringResource.Properties</label>
    }
    <div class="col-sm-8 @(propertyIndex > 0 ? "col-sm-offset-2" : string.Empty) ">
        <div class="template-property row">
            <div class="col-sm-8">
                @using (Html.BeginCollectionItem("Properties"))
                {
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.TemplateId)
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @id = "input-" + this.Model.Id.ToString() })
                }
            </div>
            @Html.ActionLink(StringResource.admin_Delete, "DeleteProperty", new { id = this.Model.Id }, new { @class = "btn btn-default btn-sm delete-property pull-right delete-button" })
            @Html.ActionLink(StringResource.admin_CustomPropertyUpdate, "UpdateProperty", new { id = this.Model.Id }, new { @class = "btn btn-default btn-sm delete-property pull-right update-button", id = "btn-" + this.Model.Id.ToString() })
        </div>
    </div>
</div>
