/*
Deployment script for InstantStore

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "InstantStore"
:setvar DefaultFilePrefix "InstantStore"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)] COLLATE Cyrillic_General_CI_AI
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[User]...';


GO
CREATE TABLE [dbo].[User] (
    [Id]                UNIQUEIDENTIFIER NOT NULL,
    [Name]              NVARCHAR (300)   NOT NULL,
    [Email]             NVARCHAR (100)   NULL,
    [Company]           NVARCHAR (250)   NULL,
    [Phonenumber]       NVARCHAR (50)    NULL,
    [City]              NVARCHAR (300)   NULL,
    [Password]          NVARCHAR (MAX)   NOT NULL,
    [IsAdmin]           BIT              NOT NULL,
    [IsActivated]       BIT              NOT NULL,
    [IsBlocked]         BIT              NOT NULL,
    [IsPaymentCash]     BIT              NOT NULL,
    [DefaultCurrencyId] UNIQUEIDENTIFIER NULL,
    [Comments]          NVARCHAR (MAX)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Settings]...';


GO
CREATE TABLE [dbo].[Settings] (
    [MainDescription] NVARCHAR (MAX)   NULL,
    [HeaderHtml]      NVARCHAR (MAX)   NULL,
    [FooterHtml]      NVARCHAR (MAX)   NULL,
    [Id]              UNIQUEIDENTIFIER NOT NULL,
    CONSTRAINT [PK_Settings] PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Product]...';


GO
CREATE TABLE [dbo].[Product] (
    [VersionId]                  UNIQUEIDENTIFIER NOT NULL,
    [Id]                         UNIQUEIDENTIFIER NOT NULL,
    [Name]                       NVARCHAR (250)   NOT NULL,
    [Description]                NVARCHAR (MAX)   NULL,
    [MainImage]                  IMAGE            NULL,
    [CashAccepted]               BIT              NOT NULL,
    [IsAvailable]                BIT              NOT NULL,
    [PriceCurrencyId]            UNIQUEIDENTIFIER NULL,
    [PriceValueCash]             NUMERIC (19, 4)  NULL,
    [PriceValueCashless]         NUMERIC (19, 4)  NULL,
    [CustomAttributesTemplateId] UNIQUEIDENTIFIER NULL,
    [Version]                    INT              NOT NULL,
    PRIMARY KEY CLUSTERED ([VersionId] ASC)
);


GO
PRINT N'Creating [dbo].[Feedback]...';


GO
CREATE TABLE [dbo].[Feedback] (
    [Id]      UNIQUEIDENTIFIER NOT NULL,
    [Name]    NVARCHAR (50)    NOT NULL,
    [Email]   NVARCHAR (50)    NOT NULL,
    [Message] NVARCHAR (MAX)   NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ExchangeRate]...';


GO
CREATE TABLE [dbo].[ExchangeRate] (
    [Id]                    UNIQUEIDENTIFIER NOT NULL,
    [FromCurrencyId]        UNIQUEIDENTIFIER NOT NULL,
    [ToCurrencyId]          UNIQUEIDENTIFIER NOT NULL,
    [ConversionRate]        FLOAT (53)       NULL,
    [ReverseConversionRate] FLOAT (53)       NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[CustomProperty]...';


GO
CREATE TABLE [dbo].[CustomProperty] (
    [Id]         UNIQUEIDENTIFIER NOT NULL,
    [Name]       NVARCHAR (250)   NOT NULL,
    [Value]      NVARCHAR (MAX)   NULL,
    [TemplateId] UNIQUEIDENTIFIER NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Currency]...';


GO
CREATE TABLE [dbo].[Currency] (
    [Id]   UNIQUEIDENTIFIER NOT NULL,
    [Text] NVARCHAR (50)    NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Image]...';


GO
CREATE TABLE [dbo].[Image] (
    [Id]               UNIQUEIDENTIFIER NOT NULL,
    [Image]            IMAGE            NOT NULL,
    [ImageContentType] NVARCHAR (250)   NOT NULL,
    [ProductId]        UNIQUEIDENTIFIER NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Category]...';


GO
CREATE TABLE [dbo].[Category] (
    [VersionId]   UNIQUEIDENTIFIER NOT NULL,
    [Id]          UNIQUEIDENTIFIER NOT NULL,
    [Name]        NVARCHAR (250)   NOT NULL,
    [ShowInMenu]  BIT              NOT NULL,
    [Image]       IMAGE            NULL,
    [ImageId]     UNIQUEIDENTIFIER NULL,
    [ListType]    INT              NOT NULL,
    [ShowPrices]  BIT              NOT NULL,
    [Description] NVARCHAR (MAX)   NULL,
    [Version]     INT              NOT NULL,
    PRIMARY KEY CLUSTERED ([VersionId] ASC)
);


GO
PRINT N'Creating [dbo].[ErrorLog]...';


GO
CREATE TABLE [dbo].[ErrorLog] (
    [Id]            UNIQUEIDENTIFIER NOT NULL,
    [ExceptionText] NVARCHAR (MAX)   NOT NULL,
    [DateTime]      DATETIME         NOT NULL,
    [UserId]        UNIQUEIDENTIFIER NULL,
    [SessionId]     NVARCHAR (MAX)   NULL,
    [RequestUrl]    NVARCHAR (MAX)   NOT NULL,
    [ClientIP]      NVARCHAR (50)    NULL,
    [UserAgent]     NVARCHAR (250)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Attachment]...';


GO
CREATE TABLE [dbo].[Attachment] (
    [Id]            UNIQUEIDENTIFIER NOT NULL,
    [Name]          NVARCHAR (250)   NOT NULL,
    [Content]       VARBINARY (MAX)  NOT NULL,
    [ContentType]   NVARCHAR (250)   NOT NULL,
    [ContentLength] INT              NOT NULL,
    [UploadedAt]    DATETIME         NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[PropertyTemplate]...';


GO
CREATE TABLE [dbo].[PropertyTemplate] (
    [Id]          UNIQUEIDENTIFIER NOT NULL,
    [Name]        NVARCHAR (250)   NOT NULL,
    [IsPrototype] BIT              NOT NULL,
    [PrototypeId] UNIQUEIDENTIFIER NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ContentPage]...';


GO
CREATE TABLE [dbo].[ContentPage] (
    [Id]             UNIQUEIDENTIFIER NOT NULL,
    [Name]           NVARCHAR (250)   NOT NULL,
    [Text]           NVARCHAR (MAX)   NULL,
    [ContentType]    INT              NOT NULL,
    [ParentId]       UNIQUEIDENTIFIER NULL,
    [CategoryId]     UNIQUEIDENTIFIER NULL,
    [Position]       INT              NOT NULL,
    [AttachmentId]   UNIQUEIDENTIFIER NULL,
    [AttachmentName] NVARCHAR (250)   NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[ProductToCategory]...';


GO
CREATE TABLE [dbo].[ProductToCategory] (
    [Id]         UNIQUEIDENTIFIER NOT NULL,
    [ProductId]  UNIQUEIDENTIFIER NOT NULL,
    [CategoryId] UNIQUEIDENTIFIER NOT NULL,
    [UpdateTime] DATETIME         NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating FK_Product_ToTableCurrency...';


GO
ALTER TABLE [dbo].[Product]
    ADD CONSTRAINT [FK_Product_ToTableCurrency] FOREIGN KEY ([PriceCurrencyId]) REFERENCES [dbo].[Currency] ([Id]);


GO
PRINT N'Creating FK_Product_ToTablePropertyTemplate...';


GO
ALTER TABLE [dbo].[Product]
    ADD CONSTRAINT [FK_Product_ToTablePropertyTemplate] FOREIGN KEY ([CustomAttributesTemplateId]) REFERENCES [dbo].[PropertyTemplate] ([Id]);


GO
PRINT N'Creating FK_ExchangeRate_FromCurrency...';


GO
ALTER TABLE [dbo].[ExchangeRate]
    ADD CONSTRAINT [FK_ExchangeRate_FromCurrency] FOREIGN KEY ([FromCurrencyId]) REFERENCES [dbo].[Currency] ([Id]);


GO
PRINT N'Creating FK_ExchangeRate_ToCurrency...';


GO
ALTER TABLE [dbo].[ExchangeRate]
    ADD CONSTRAINT [FK_ExchangeRate_ToCurrency] FOREIGN KEY ([ToCurrencyId]) REFERENCES [dbo].[Currency] ([Id]);


GO
PRINT N'Creating FK_CustomProperty_ToTablePropertyTemplateTable...';


GO
ALTER TABLE [dbo].[CustomProperty]
    ADD CONSTRAINT [FK_CustomProperty_ToTablePropertyTemplateTable] FOREIGN KEY ([TemplateId]) REFERENCES [dbo].[PropertyTemplate] ([Id]);


GO
PRINT N'Creating FK_ContentPage_ToTableContentPage...';


GO
ALTER TABLE [dbo].[ContentPage]
    ADD CONSTRAINT [FK_ContentPage_ToTableContentPage] FOREIGN KEY ([ParentId]) REFERENCES [dbo].[ContentPage] ([Id]);


GO
PRINT N'Creating FK_ContentPage_ToTableCategory...';


GO
ALTER TABLE [dbo].[ContentPage]
    ADD CONSTRAINT [FK_ContentPage_ToTableCategory] FOREIGN KEY ([CategoryId]) REFERENCES [dbo].[Category] ([VersionId]);


GO
PRINT N'Creating FK_ContentPage_ToTableAttachment (Id...';


GO
ALTER TABLE [dbo].[ContentPage]
    ADD CONSTRAINT [FK_ContentPage_ToTableAttachment (Id] FOREIGN KEY ([AttachmentId]) REFERENCES [dbo].[Attachment] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5cf1951d-83b7-4904-ac05-126fb77309c5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5cf1951d-83b7-4904-ac05-126fb77309c5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '341a99d9-5676-4fe9-b1e6-f1a4b3ce0202')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('341a99d9-5676-4fe9-b1e6-f1a4b3ce0202')

GO

GO
SET IDENTITY_INSERT [dbo].[ProductCategories] ON
INSERT INTO [dbo].[ProductCategories] ([ProductCategoryId], [Name], [ParentCategory], [DisplayType], [IsVisibleInMenu], [URLAlias], [SortOrder]) VALUES (1, N'Завальцовка', 3, 1, 1, N'Zavaltsovka', 1)
INSERT INTO [dbo].[ProductCategories] ([ProductCategoryId], [Name], [ParentCategory], [DisplayType], [IsVisibleInMenu], [URLAlias], [SortOrder]) VALUES (2, N'Шарики', 3, 1, 1, N'Shariki', 2)
INSERT INTO [dbo].[ProductCategories] ([ProductCategoryId], [Name], [ParentCategory], [DisplayType], [IsVisibleInMenu], [URLAlias], [SortOrder]) VALUES (3, N'Серьги для прокалывания мочки уха', NULL, 1, 1, N'EarPiercing', 1)
SET IDENTITY_INSERT [dbo].[ProductCategories] OFF

SET IDENTITY_INSERT [dbo].[ProductSize] ON
INSERT INTO [dbo].[ProductSize] ([Id], [Name], [SortOrder]) VALUES (1, N'Миди', 0)
INSERT INTO [dbo].[ProductSize] ([Id], [Name], [SortOrder]) VALUES (2, N'Мини', 1)
INSERT INTO [dbo].[ProductSize] ([Id], [Name], [SortOrder]) VALUES (3, N'Макси', 2)
SET IDENTITY_INSERT [dbo].[ProductSize] OFF

SET IDENTITY_INSERT [dbo].[Products] ON
INSERT INTO [dbo].[Products] ([ProductId], [Name], [Description], [PriceCash], [PriceCashless], [ProductSizeID]) VALUES (1, N'Шарик', N'Золотой шарик среднего размера', CAST(5.00 AS Decimal(16, 2)), CAST(15000.00 AS Decimal(16, 2)), 1)
INSERT INTO [dbo].[Products] ([ProductId], [Name], [Description], [PriceCash], [PriceCashless], [ProductSizeID]) VALUES (2, N'Звездочка', N'Золотая звездочка среднего размера', CAST(5.00 AS Decimal(16, 2)), CAST(15000.00 AS Decimal(16, 2)), 1)
INSERT INTO [dbo].[Products] ([ProductId], [Name], [Description], [PriceCash], [PriceCashless], [ProductSizeID]) VALUES (3, N'Звездочка', N'Золотая звездочка маленького размера', CAST(5.50 AS Decimal(16, 2)), CAST(17000.00 AS Decimal(16, 2)), 2)
INSERT INTO [dbo].[Products] ([ProductId], [Name], [Description], [PriceCash], [PriceCashless], [ProductSizeID]) VALUES (4, N'Сапфир', N'Сапфир в золотой завальцовке среднего размера', CAST(5.00 AS Decimal(16, 2)), CAST(15000.00 AS Decimal(16, 2)), 1)
INSERT INTO [dbo].[Products] ([ProductId], [Name], [Description], [PriceCash], [PriceCashless], [ProductSizeID]) VALUES (5, N'Хрусталь', N'Хрусталь в золотой завальцовке среднего размера', CAST(5.00 AS Decimal(16, 2)), CAST(15000.00 AS Decimal(16, 2)), 1)
INSERT INTO [dbo].[Products] ([ProductId], [Name], [Description], [PriceCash], [PriceCashless], [ProductSizeID]) VALUES (6, N'Хрусталь', N'Хрусталь в золотой завальцовке маленького размера', CAST(5.50 AS Decimal(16, 2)), CAST(17000.00 AS Decimal(16, 2)), 2)
SET IDENTITY_INSERT [dbo].[Products] OFF

INSERT INTO [dbo].[ProductsCategories] ([ProductId], [ProductCategoryID], [SortOrder]) VALUES (1, 2, 1)
INSERT INTO [dbo].[ProductsCategories] ([ProductId], [ProductCategoryID], [SortOrder]) VALUES (2, 2, 2)
INSERT INTO [dbo].[ProductsCategories] ([ProductId], [ProductCategoryID], [SortOrder]) VALUES (3, 2, 1)
INSERT INTO [dbo].[ProductsCategories] ([ProductId], [ProductCategoryID], [SortOrder]) VALUES (4, 1, 1)
INSERT INTO [dbo].[ProductsCategories] ([ProductId], [ProductCategoryID], [SortOrder]) VALUES (5, 1, 2)
INSERT INTO [dbo].[ProductsCategories] ([ProductId], [ProductCategoryID], [SortOrder]) VALUES (5, 1, 3)
GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET MULTI_USER 
    WITH ROLLBACK IMMEDIATE;


GO
PRINT N'Update complete.';


GO
