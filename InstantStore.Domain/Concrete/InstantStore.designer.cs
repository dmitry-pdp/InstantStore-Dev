#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InstantStore.Domain.Concrete
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="InstantStore")]
	public partial class InstantStoreDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProductSize(ProductSize instance);
    partial void UpdateProductSize(ProductSize instance);
    partial void DeleteProductSize(ProductSize instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductCategory(ProductCategory instance);
    partial void UpdateProductCategory(ProductCategory instance);
    partial void DeleteProductCategory(ProductCategory instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertFeedback(Feedback instance);
    partial void UpdateFeedback(Feedback instance);
    partial void DeleteFeedback(Feedback instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertErrorLog(ErrorLog instance);
    partial void UpdateErrorLog(ErrorLog instance);
    partial void DeleteErrorLog(ErrorLog instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    #endregion
		
		public InstantStoreDataContext() : 
				base(global::InstantStore.Domain.Properties.Settings.Default.InstantStoreConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public InstantStoreDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstantStoreDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstantStoreDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstantStoreDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ProductSize> ProductSizes
		{
			get
			{
				return this.GetTable<ProductSize>();
			}
		}
		
		public System.Data.Linq.Table<ProductsCategory> ProductsCategories
		{
			get
			{
				return this.GetTable<ProductsCategory>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductCategory> ProductCategories
		{
			get
			{
				return this.GetTable<ProductCategory>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<Feedback> Feedbacks
		{
			get
			{
				return this.GetTable<Feedback>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<ErrorLog> ErrorLogs
		{
			get
			{
				return this.GetTable<ErrorLog>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductSize")]
	public partial class ProductSize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private int _SortOrder;
		
		private EntitySet<Product> _Products;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public ProductSize()
		{
			this._Products = new EntitySet<Product>(new Action<Product>(this.attach_Products), new Action<Product>(this.detach_Products));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductSize_Product", Storage="_Products", ThisKey="Id", OtherKey="ProductSizeID")]
		public EntitySet<Product> Products
		{
			get
			{
				return this._Products;
			}
			set
			{
				this._Products.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductSize = this;
		}
		
		private void detach_Products(Product entity)
		{
			this.SendPropertyChanging();
			entity.ProductSize = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductsCategories")]
	public partial class ProductsCategory
	{
		
		private int _ProductId;
		
		private int _ProductCategoryID;
		
		private int _SortOrder;
		
		public ProductsCategory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="Int NOT NULL")]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this._ProductId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryID", DbType="Int NOT NULL")]
		public int ProductCategoryID
		{
			get
			{
				return this._ProductCategoryID;
			}
			set
			{
				if ((this._ProductCategoryID != value))
				{
					this._ProductCategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Products")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductId;
		
		private string _Name;
		
		private string _Description;
		
		private decimal _PriceCash;
		
		private decimal _PriceCashless;
		
		private int _ProductSizeID;
		
		private EntityRef<ProductSize> _ProductSize;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIdChanging(int value);
    partial void OnProductIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPriceCashChanging(decimal value);
    partial void OnPriceCashChanged();
    partial void OnPriceCashlessChanging(decimal value);
    partial void OnPriceCashlessChanged();
    partial void OnProductSizeIDChanging(int value);
    partial void OnProductSizeIDChanged();
    #endregion
		
		public Product()
		{
			this._ProductSize = default(EntityRef<ProductSize>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceCash", DbType="Decimal(16,2) NOT NULL")]
		public decimal PriceCash
		{
			get
			{
				return this._PriceCash;
			}
			set
			{
				if ((this._PriceCash != value))
				{
					this.OnPriceCashChanging(value);
					this.SendPropertyChanging();
					this._PriceCash = value;
					this.SendPropertyChanged("PriceCash");
					this.OnPriceCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceCashless", DbType="Decimal(16,2) NOT NULL")]
		public decimal PriceCashless
		{
			get
			{
				return this._PriceCashless;
			}
			set
			{
				if ((this._PriceCashless != value))
				{
					this.OnPriceCashlessChanging(value);
					this.SendPropertyChanging();
					this._PriceCashless = value;
					this.SendPropertyChanged("PriceCashless");
					this.OnPriceCashlessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSizeID", DbType="Int NOT NULL")]
		public int ProductSizeID
		{
			get
			{
				return this._ProductSizeID;
			}
			set
			{
				if ((this._ProductSizeID != value))
				{
					if (this._ProductSize.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductSizeIDChanging(value);
					this.SendPropertyChanging();
					this._ProductSizeID = value;
					this.SendPropertyChanged("ProductSizeID");
					this.OnProductSizeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProductSize_Product", Storage="_ProductSize", ThisKey="ProductSizeID", OtherKey="Id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ProductSize ProductSize
		{
			get
			{
				return this._ProductSize.Entity;
			}
			set
			{
				ProductSize previousValue = this._ProductSize.Entity;
				if (((previousValue != value) 
							|| (this._ProductSize.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProductSize.Entity = null;
						previousValue.Products.Remove(this);
					}
					this._ProductSize.Entity = value;
					if ((value != null))
					{
						value.Products.Add(this);
						this._ProductSizeID = value.Id;
					}
					else
					{
						this._ProductSizeID = default(int);
					}
					this.SendPropertyChanged("ProductSize");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductCategories")]
	public partial class ProductCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductCategoryId;
		
		private string _Name;
		
		private System.Nullable<int> _ParentCategory;
		
		private System.Nullable<int> _DisplayType;
		
		private bool _IsVisibleInMenu;
		
		private string _URLAlias;
		
		private System.Nullable<int> _SortOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductCategoryIdChanging(int value);
    partial void OnProductCategoryIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentCategoryChanging(System.Nullable<int> value);
    partial void OnParentCategoryChanged();
    partial void OnDisplayTypeChanging(System.Nullable<int> value);
    partial void OnDisplayTypeChanged();
    partial void OnIsVisibleInMenuChanging(bool value);
    partial void OnIsVisibleInMenuChanged();
    partial void OnURLAliasChanging(string value);
    partial void OnURLAliasChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    #endregion
		
		public ProductCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductCategoryId
		{
			get
			{
				return this._ProductCategoryId;
			}
			set
			{
				if ((this._ProductCategoryId != value))
				{
					this.OnProductCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ProductCategoryId = value;
					this.SendPropertyChanged("ProductCategoryId");
					this.OnProductCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCategory", DbType="Int")]
		public System.Nullable<int> ParentCategory
		{
			get
			{
				return this._ParentCategory;
			}
			set
			{
				if ((this._ParentCategory != value))
				{
					this.OnParentCategoryChanging(value);
					this.SendPropertyChanging();
					this._ParentCategory = value;
					this.SendPropertyChanged("ParentCategory");
					this.OnParentCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayType", DbType="Int")]
		public System.Nullable<int> DisplayType
		{
			get
			{
				return this._DisplayType;
			}
			set
			{
				if ((this._DisplayType != value))
				{
					this.OnDisplayTypeChanging(value);
					this.SendPropertyChanging();
					this._DisplayType = value;
					this.SendPropertyChanged("DisplayType");
					this.OnDisplayTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVisibleInMenu", DbType="Bit NOT NULL")]
		public bool IsVisibleInMenu
		{
			get
			{
				return this._IsVisibleInMenu;
			}
			set
			{
				if ((this._IsVisibleInMenu != value))
				{
					this.OnIsVisibleInMenuChanging(value);
					this.SendPropertyChanging();
					this._IsVisibleInMenu = value;
					this.SendPropertyChanged("IsVisibleInMenu");
					this.OnIsVisibleInMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_URLAlias", DbType="NVarChar(100)")]
		public string URLAlias
		{
			get
			{
				return this._URLAlias;
			}
			set
			{
				if ((this._URLAlias != value))
				{
					this.OnURLAliasChanging(value);
					this.SendPropertyChanging();
					this._URLAlias = value;
					this.SendPropertyChanged("URLAlias");
					this.OnURLAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Settings")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MainDescription;
		
		private string _HeaderHtml;
		
		private string _FooterHtml;
		
		private System.Guid _Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMainDescriptionChanging(string value);
    partial void OnMainDescriptionChanged();
    partial void OnHeaderHtmlChanging(string value);
    partial void OnHeaderHtmlChanged();
    partial void OnFooterHtmlChanging(string value);
    partial void OnFooterHtmlChanged();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    #endregion
		
		public Setting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainDescription", DbType="NVarChar(MAX)")]
		public string MainDescription
		{
			get
			{
				return this._MainDescription;
			}
			set
			{
				if ((this._MainDescription != value))
				{
					this.OnMainDescriptionChanging(value);
					this.SendPropertyChanging();
					this._MainDescription = value;
					this.SendPropertyChanged("MainDescription");
					this.OnMainDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeaderHtml", DbType="NVarChar(MAX)")]
		public string HeaderHtml
		{
			get
			{
				return this._HeaderHtml;
			}
			set
			{
				if ((this._HeaderHtml != value))
				{
					this.OnHeaderHtmlChanging(value);
					this.SendPropertyChanging();
					this._HeaderHtml = value;
					this.SendPropertyChanged("HeaderHtml");
					this.OnHeaderHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FooterHtml", DbType="NVarChar(MAX)")]
		public string FooterHtml
		{
			get
			{
				return this._FooterHtml;
			}
			set
			{
				if ((this._FooterHtml != value))
				{
					this.OnFooterHtmlChanging(value);
					this.SendPropertyChanging();
					this._FooterHtml = value;
					this.SendPropertyChanged("FooterHtml");
					this.OnFooterHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Feedback")]
	public partial class Feedback : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Email;
		
		private string _Message;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    #endregion
		
		public Feedback()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Email;
		
		private string _Company;
		
		private string _Phonenumber;
		
		private string _City;
		
		private string _Password;
		
		private bool _IsAdmin;
		
		private bool _IsActivated;
		
		private bool _IsBlocked;
		
		private bool _IsPaymentCash;
		
		private System.Nullable<System.Guid> _DefaultCurrencyId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnPhonenumberChanging(string value);
    partial void OnPhonenumberChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIsAdminChanging(bool value);
    partial void OnIsAdminChanged();
    partial void OnIsActivatedChanging(bool value);
    partial void OnIsActivatedChanged();
    partial void OnIsBlockedChanging(bool value);
    partial void OnIsBlockedChanged();
    partial void OnIsPaymentCashChanging(bool value);
    partial void OnIsPaymentCashChanged();
    partial void OnDefaultCurrencyIdChanging(System.Nullable<System.Guid> value);
    partial void OnDefaultCurrencyIdChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="NVarChar(250)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phonenumber", DbType="NVarChar(50)")]
		public string Phonenumber
		{
			get
			{
				return this._Phonenumber;
			}
			set
			{
				if ((this._Phonenumber != value))
				{
					this.OnPhonenumberChanging(value);
					this.SendPropertyChanging();
					this._Phonenumber = value;
					this.SendPropertyChanged("Phonenumber");
					this.OnPhonenumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAdmin", DbType="Bit NOT NULL")]
		public bool IsAdmin
		{
			get
			{
				return this._IsAdmin;
			}
			set
			{
				if ((this._IsAdmin != value))
				{
					this.OnIsAdminChanging(value);
					this.SendPropertyChanging();
					this._IsAdmin = value;
					this.SendPropertyChanged("IsAdmin");
					this.OnIsAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActivated", DbType="Bit NOT NULL")]
		public bool IsActivated
		{
			get
			{
				return this._IsActivated;
			}
			set
			{
				if ((this._IsActivated != value))
				{
					this.OnIsActivatedChanging(value);
					this.SendPropertyChanging();
					this._IsActivated = value;
					this.SendPropertyChanged("IsActivated");
					this.OnIsActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlocked", DbType="Bit NOT NULL")]
		public bool IsBlocked
		{
			get
			{
				return this._IsBlocked;
			}
			set
			{
				if ((this._IsBlocked != value))
				{
					this.OnIsBlockedChanging(value);
					this.SendPropertyChanging();
					this._IsBlocked = value;
					this.SendPropertyChanged("IsBlocked");
					this.OnIsBlockedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPaymentCash", DbType="Bit NOT NULL")]
		public bool IsPaymentCash
		{
			get
			{
				return this._IsPaymentCash;
			}
			set
			{
				if ((this._IsPaymentCash != value))
				{
					this.OnIsPaymentCashChanging(value);
					this.SendPropertyChanging();
					this._IsPaymentCash = value;
					this.SendPropertyChanged("IsPaymentCash");
					this.OnIsPaymentCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultCurrencyId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> DefaultCurrencyId
		{
			get
			{
				return this._DefaultCurrencyId;
			}
			set
			{
				if ((this._DefaultCurrencyId != value))
				{
					this.OnDefaultCurrencyIdChanging(value);
					this.SendPropertyChanging();
					this._DefaultCurrencyId = value;
					this.SendPropertyChanged("DefaultCurrencyId");
					this.OnDefaultCurrencyIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ErrorLog")]
	public partial class ErrorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _ExceptionText;
		
		private System.DateTime _DateTime;
		
		private System.Nullable<System.Guid> _UserId;
		
		private string _SessionId;
		
		private string _RequestUrl;
		
		private string _ClientIP;
		
		private string _UserAgent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnExceptionTextChanging(string value);
    partial void OnExceptionTextChanged();
    partial void OnDateTimeChanging(System.DateTime value);
    partial void OnDateTimeChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnSessionIdChanging(string value);
    partial void OnSessionIdChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnClientIPChanging(string value);
    partial void OnClientIPChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    #endregion
		
		public ErrorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionText", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ExceptionText
		{
			get
			{
				return this._ExceptionText;
			}
			set
			{
				if ((this._ExceptionText != value))
				{
					this.OnExceptionTextChanging(value);
					this.SendPropertyChanging();
					this._ExceptionText = value;
					this.SendPropertyChanged("ExceptionText");
					this.OnExceptionTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTime", DbType="DateTime NOT NULL")]
		public System.DateTime DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this.OnDateTimeChanging(value);
					this.SendPropertyChanging();
					this._DateTime = value;
					this.SendPropertyChanged("DateTime");
					this.OnDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SessionId", DbType="NVarChar(MAX)")]
		public string SessionId
		{
			get
			{
				return this._SessionId;
			}
			set
			{
				if ((this._SessionId != value))
				{
					this.OnSessionIdChanging(value);
					this.SendPropertyChanging();
					this._SessionId = value;
					this.SendPropertyChanged("SessionId");
					this.OnSessionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RequestUrl
		{
			get
			{
				return this._RequestUrl;
			}
			set
			{
				if ((this._RequestUrl != value))
				{
					this.OnRequestUrlChanging(value);
					this.SendPropertyChanging();
					this._RequestUrl = value;
					this.SendPropertyChanged("RequestUrl");
					this.OnRequestUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientIP", DbType="NVarChar(50)")]
		public string ClientIP
		{
			get
			{
				return this._ClientIP;
			}
			set
			{
				if ((this._ClientIP != value))
				{
					this.OnClientIPChanging(value);
					this.SendPropertyChanging();
					this._ClientIP = value;
					this.SendPropertyChanged("ClientIP");
					this.OnClientIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserAgent", DbType="NVarChar(250)")]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Category")]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private System.Nullable<System.Guid> _ParentCategoryId;
		
		private System.Data.Linq.Binary _Image;
		
		private bool _ShowInMenu;
		
		private System.Nullable<byte> _ListType;
		
		private string _Text;
		
		private System.Data.Linq.Binary _Attachment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParentCategoryIdChanging(System.Nullable<System.Guid> value);
    partial void OnParentCategoryIdChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnShowInMenuChanging(bool value);
    partial void OnShowInMenuChanged();
    partial void OnListTypeChanging(System.Nullable<byte> value);
    partial void OnListTypeChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnAttachmentChanging(System.Data.Linq.Binary value);
    partial void OnAttachmentChanged();
    #endregion
		
		public Category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCategoryId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ParentCategoryId
		{
			get
			{
				return this._ParentCategoryId;
			}
			set
			{
				if ((this._ParentCategoryId != value))
				{
					this.OnParentCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ParentCategoryId = value;
					this.SendPropertyChanged("ParentCategoryId");
					this.OnParentCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShowInMenu", DbType="Bit NOT NULL")]
		public bool ShowInMenu
		{
			get
			{
				return this._ShowInMenu;
			}
			set
			{
				if ((this._ShowInMenu != value))
				{
					this.OnShowInMenuChanging(value);
					this.SendPropertyChanging();
					this._ShowInMenu = value;
					this.SendPropertyChanged("ShowInMenu");
					this.OnShowInMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ListType", DbType="TinyInt")]
		public System.Nullable<byte> ListType
		{
			get
			{
				return this._ListType;
			}
			set
			{
				if ((this._ListType != value))
				{
					this.OnListTypeChanging(value);
					this.SendPropertyChanging();
					this._ListType = value;
					this.SendPropertyChanged("ListType");
					this.OnListTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attachment", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Attachment
		{
			get
			{
				return this._Attachment;
			}
			set
			{
				if ((this._Attachment != value))
				{
					this.OnAttachmentChanging(value);
					this.SendPropertyChanging();
					this._Attachment = value;
					this.SendPropertyChanged("Attachment");
					this.OnAttachmentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
