using System;
using System.Collections.Generic;
using System.Linq;
using System.Web.Mvc;
using Ninject;
using Moq;
using InstantStore.Domain.Abstract;
using InstantStore.Domain.Entities;

namespace InstantStore.WebUI.Infrastructure
{
    public class NinjectDependencyResolver : IDependencyResolver
    {
        private IKernel kernel;

        public NinjectDependencyResolver(IKernel kernelParam)
        {
            kernel = kernelParam;
            AddBindings();
        }
        
        private void AddBindings()
        {
            Mock<IRepository> mock = new Mock<IRepository>();
            mock.Setup(m => m.Products).Returns(new List<Product> {
                new Product { Name = "Round", Category = new ProductCategory(){Name = "Simple", Type=CategoryDisplayType.Tiles}, PriceCash=5},
                new Product { Name = "Star", Category = new ProductCategory(){Name = "Simple", Type=CategoryDisplayType.Tiles}, PriceCash=6},
                new Product { Name = "Zircon Cubic", Category = new ProductCategory(){Name = "Zavaltsovka", Type=CategoryDisplayType.ListOfLinks}, PriceCash=15}
            });
            kernel.Bind<IRepository>().ToConstant(mock.Object);
        }

        public object GetService(Type serviceType)
        {
            return kernel.TryGet(serviceType);
        }

        public IEnumerable<object> GetServices(Type serviceType)
        {
            return kernel.GetAll(serviceType);
        }
    }
}